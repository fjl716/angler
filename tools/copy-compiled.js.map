{"version":3,"sources":["copy.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;;;AAdA;;;;;;;;;;wEAkBA;AAAA;;AAAA,sEAAgC,EAAhC;;AAAA,QAAsB,KAAtB,SAAsB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,eADR,GACc,mBAAQ,SAAR,CAAkB,QAAQ,KAAR,CAAlB,CADd;AAAA;AAAA,mBAGQ,mBAAQ,GAAR,CAAY,CAChB,IAAI,cAAJ,EAAoB,oBAApB,CADgB,CAAZ,CAHR;;AAAA;;AAOE,mCAAQ;AACN,qBAAO,WADD;AAEN,2BAAa,2BAFP;AAGN,qBAAO,CAAC,oBAAD,CAHD;AAIN,yBAAW,KAJL;AAKN,sBAAQ;AALF,aAAR;;AAPF,iBAeM,KAfN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgB0B,uBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACrD,kCAAK,oBAAL,EAA2B,UAAC,GAAD,EAAM,GAAN;AAAA,uBAAc,MAAM,OAAO,GAAP,CAAN,GAAoB,QAAQ,GAAR,CAAlC;AAAA,eAA3B;AACD,aAFqB,CAhB1B;;AAAA;AAgBU,mBAhBV;;AAmBI,oBAAQ,EAAR,CAAW,SAAX;AAAA,qFAAsB,iBAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,+BADc,GACJ,KAAK,MAAL,CAAY,eAAK,IAAL,CAAU,SAAV,EAAqB,iBAArB,EAAwC,MAApD,CADI;AAAA;AAAA,+BAEd,qBAAmB,OAAnB,qBAA+C,OAA/C,CAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtB;;AAAA;AAAA;AAAA;AAAA;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,I;;;;;AATf;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAgCe,I","file":"copy-compiled.js","sourcesContent":["/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright Â© 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport path from 'path';\nimport gaze from 'gaze';\nimport replace from 'replace';\nimport Promise from 'bluebird';\n\n/**\n * Copies static files such as robots.txt, favicon.ico to the\n * output (build) folder.\n */\nasync function copy({ watch } = {}) {\n  const ncp = Promise.promisify(require('ncp'));\n\n  await Promise.all([\n    ncp('package.json', 'build/package.json'),\n  ]);\n\n  replace({\n    regex: '\"start\".*',\n    replacement: '\"start\": \"node server.js\"',\n    paths: ['build/package.json'],\n    recursive: false,\n    silent: false,\n  });\n\n  if (watch) {\n    const watcher = await new Promise((resolve, reject) => {\n      gaze('src/content/**/*.*', (err, val) => err ? reject(err) : resolve(val));\n    });\n    watcher.on('changed', async (file) => {\n      const relPath = file.substr(path.join(__dirname, '../src/content/').length);\n      await ncp(`src/content/${relPath}`, `build/content/${relPath}`);\n    });\n  }\n}\n\nexport default copy;\n"]}